{
  "_type": "request",
  "method": "PUT",
  "url": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/rules/:rule_id/",
  "body": {
    "mimeType": "application/json",
    "text": "{\n    \"conditions\": [\n        {\n            \"id\": \"sentry.rules.conditions.first_seen_event.FirstSeenEventCondition\",\n            \"label\": \"label...\",\n            \"name\": \"A new issue is created\"\n        }\n    ],\n    \"filters\": [\n        {\n            \"match\": \"co\",\n            \"id\": \"sentry.rules.filters.tagged_event.TaggedEventFilter\",\n            \"key\": \"release\",\n            \"value\": \"23.10.1\",\n            \"name\": \"The event's tags match release contains 23.10.1\"\n        }\n    ],\n    \"actions\": [\n        {\n            \"targetType\": \"Member\",\n            \"fallthroughType\": \"ActiveMembers\",\n            \"id\": \"sentry.mail.actions.NotifyEmailAction\",\n            \"targetIdentifier\": 2090953,\n            \"name\": \"Send a notification to Member\"\n        }\n    ],\n    \"actionMatch\": \"any\",\n    \"filterMatch\": \"all\",\n    \"frequency\": 1440,\n    \"name\": \"Dirk JS Issue via API\",\n    \"owner\": \"team:1168178\",\n    \"createdBy\": {\n        \"id\": 2090953,\n        \"name\": \"dirk.nielsen@sentry.io\",\n        \"email\": \"dirk.nielsen@sentry.io\"\n    },\n    \"environment\": \"production\",\n    \"status\": \"active\",\n    \"snooze\": false\n}"
  },
  "headers": [],
  "parameters": [
    {
      "name": "cursor",
      "value": "0:200:0",
      "disabled": true
    }
  ],
  "authentication": {
    "type": "No Auth"
  },
  "description": "# Update an Issue Alert Rule\n\n[https://docs.sentry.io/api/alerts/update-an-issue-alert-rule/](https://docs.sentry.io/api/alerts/update-an-issue-alert-rule/)\n\nPUT/api/0/projects/{organization_slug}/{project_slug}/rules/{rule_id}/\n\nUpdates an issue alert rule.\n\n> &lt;p &gt;Warning: Calling this endpoint fully overwrites the specified issue alert.&lt;/p&gt; \n  \n\nAn issue alert rule triggers whenever a new event is received for any issue in a project that matches the specified alert conditions. These conditions can include a resolved issue re-appearing or an issue affecting many users. Alert conditions have three parts:\n\n- Triggers - specify what type of activity you'd like monitored or when an alert should be triggered.\n    \n- Filters - help control noise by triggering an alert only if the issue matches the specified criteria.\n    \n- Actions - specify what should happen when the trigger conditions are met and the filters match.\n    \n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n`project_slug` _(string)_REQUIRED\n\nThe slug of the project the resource belongs to.\n\n`rule_id` _(integer)_REQUIRED\n\nThe ID of the rule you'd like to query.\n\n### Body Parameters\n\n`name` _(string)_REQUIRED\n\nThe name for the rule.\n\n`actionMatch` _(string)_REQUIRED\n\nA string determining which of the conditions need to be true before any filters are evaluated.\n\n- `all` - All conditions must evaluate to true.\n    \n- `any` - At least one of the conditions must evaluate to true.\n    \n- `none` - All conditions must evaluate to false.\n    \n\n`conditions` _(array(object))_REQUIRED\n\nA list of triggers that determine when the rule fires. See [Create an Issue Alert Rule](https://docs.sentry.io/api/alerts/create-an-issue-alert-rule-for-a-project/) for valid conditions.\n\n`actions` _(array(object))_REQUIRED\n\nA list of actions that take place when all required conditions and filters for the rule are met. See [Create an Issue Alert Rule](https://docs.sentry.io/api/alerts/create-an-issue-alert-rule-for-a-project/) for valid actions.\n\n`frequency` _(integer)_REQUIRED\n\nHow often to perform the actions once for an issue, in minutes. The valid range is `5` to `43200`.\n\n`environment` _(string)_\n\nThe name of the environment to filter by.\n\n`filterMatch` _(string)_\n\nA string determining which filters need to be true before any actions take place.\n\n- `all` - All filters must evaluate to true.\n    \n- `any` - At least one of the filters must evaluate to true.\n    \n- `none` - All filters must evaluate to false.\n    \n\n`filters` _(array(object))_\n\nA list of filters that determine if a rule fires after the necessary conditions have been met. See [Create an Issue Alert Rule](https://docs.sentry.io/api/alerts/create-an-issue-alert-rule-for-a-project/) for valid filters.\n\n`owner` _(string)_\n\nThe ID of the team or user that owns the rule.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `alerts:write`\n    \n- `project:admin`\n    \n- `project:write`",
  "sortOrder": 14
}
