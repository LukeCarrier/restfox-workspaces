{
  "_type": "request",
  "method": "PUT",
  "url": "https://sentry.io/api/0/organizations/{{organization_slug}}/alert-rules/:alert_rule_id/",
  "body": {
    "mimeType": "application/json",
    "text": "{\n    \"name\": \"Release Version Alert\",\n    \"status\": 0,\n    \"queryType\": 0,\n    \"dataset\": \"events\",\n    \"query\": \"release.version:>=23.2.2 AND release.version:<=23.7.1\",\n    \"aggregate\": \"count()\",\n    \"thresholdType\": 0,\n    \"resolveThreshold\": 300.0,s\n    \"timeWindow\": 60.0,\n    \"environment\": null,\n    \"resolution\": 1.0,\n    \"thresholdPeriod\": 1,\n    \"triggers\": [\n        {\n            \"id\": \"300559\",\n            \"alertRuleId\": \"181459\",\n            \"label\": \"critical\",\n            \"thresholdType\": 0,\n            \"alertThreshold\": 500.0,\n            \"resolveThreshold\": 300.0,\n            \"dateCreated\": \"2023-10-12T18:48:31.979874Z\",\n            \"actions\": [\n                {\n                    \"id\": \"288803\",\n                    \"alertRuleTriggerId\": \"300559\",\n                    \"type\": \"email\",\n                    \"targetType\": \"user\",\n                    \"targetIdentifier\": \"2090953\",\n                    \"inputChannelId\": null,\n                    \"integrationId\": null,\n                    \"sentryAppId\": null,\n                    \"dateCreated\": \"2023-10-12T18:48:31.987547Z\",\n                    \"desc\": \"Send a notification to dirk.nielsen@sentry.io\"\n                }\n            ]\n        },\n        {\n            \"id\": \"300560\",\n            \"alertRuleId\": \"181459\",\n            \"label\": \"warning\",\n            \"thresholdType\": 0,\n            \"alertThreshold\": 400.0,\n            \"resolveThreshold\": 300.0,\n            \"dateCreated\": \"2023-10-12T18:48:31.993283Z\",\n            \"actions\": []\n        }\n    ],\n    \"projects\": [\n        \"backend-aspnetcore\"\n    ],\n    \"includeAllProjects\": false,\n    \"owner\": \"team:1168178\",\n    \"originalAlertRuleId\": null,\n    \"comparisonDelta\": null,\n    \"createdBy\": {\n        \"id\": 2090953,\n        \"name\": \"dirk.nielsen@sentry.io\",\n        \"email\": \"dirk.nielsen@sentry.io\"\n    },\n    \"excludedProjects\": [],\n    \"eventTypes\": [\n        \"error\"\n    ],\n    \"snooze\": false\n}"
  },
  "headers": [],
  "parameters": [
    {
      "name": "cursor",
      "value": "0:200:0",
      "disabled": true
    }
  ],
  "authentication": {
    "type": "No Auth"
  },
  "description": "# Update a Metric Alert Rule\n\n[https://docs.sentry.io/api/alerts/update-a-metric-alert-rule/](https://docs.sentry.io/api/alerts/update-a-metric-alert-rule/)\n\nPUT/api/0/organizations/{organization_slug}/alert-rules/{alert_rule_id}/\n\nUpdates a metric alert rule. See **Metric Alert Rule Types** under [Create a Metric Alert Rule for an Organization](https://docs.sentry.io/api/alerts/create-a-metric-alert-rule-for-an-organization/#metric-alert-rule-types) to see valid request body configurations for different types of metric alert rule types.\n\n> &lt;p &gt;Warning: Calling this endpoint fully overwrites the specified metric alert.&lt;/p&gt; \n  \n\nA metric alert rule is a configuration that defines the conditions for triggering an alert. It specifies the metric type, function, time interval, and threshold values that determine when an alert should be triggered. Metric alert rules are used to monitor and notify you when certain metrics, like error count, latency, or failure rate, cross a predefined threshold. These rules help you proactively identify and address issues in your project.\n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n`alert_rule_id` _(integer)_REQUIRED\n\nThe ID of the rule you'd like to query.\n\n### Body Parameters\n\n`name` _(string)_REQUIRED\n\nThe name for the rule.\n\n`aggregate` _(string)_REQUIRED\n\nA string representing the aggregate function used in this alert rule. Valid aggregate functions are `count`, `count_unique`, `percentage`, `avg`, `apdex`, `failure_rate`, `p50`, `p75`, `p95`, `p99`, `p100`, and `percentile`. See **Metric Alert Rule Types** under [Create a Metric Alert Rule](https://docs.sentry.io/api/alerts/create-a-metric-alert-rule-for-an-organization/#metric-alert-rule-types) for valid configurations.\n\n`timeWindow` _(integer)_REQUIRED\n\nThe time period to aggregate over.\n\n- `1` - 1 minute\n    \n- `5` - 5 minutes\n    \n- `10` - 10 minutes\n    \n- `15` - 15 minutes\n    \n- `30` - 30 minutes\n    \n- `60` - 1 hour\n    \n- `120` - 2 hours\n    \n- `240` - 4 hours\n    \n- `1440` - 24 hours\n    \n\n`projects` _(array(string))_REQUIRED\n\nThe names of the projects to filter by.\n\n`query` _(string)_REQUIRED\n\nAn event search query to subscribe to and monitor for alerts. For example, to filter transactions so that only those with status code 400 are included, you could use `\"query\": \"http.status_code:400\"`. Use an empty string for no filter.\n\n`thresholdType` _(integer)_REQUIRED\n\nThe comparison operator for the critical and warning thresholds. The comparison operator for the resolved threshold is automatically set to the opposite operator. When a percentage change threshold is used, `0` is equivalent to \"Higher than\" and `1` is equivalent to \"Lower than\".\n\n- `0` - Above\n    \n- `1` - Below\n    \n\n`triggers` _(array(undefined))_REQUIRED\n\nA list of triggers, where each trigger is an object with the following fields:\n\n- `label`: One of `critical` or `warning`. A `critical` trigger is always required.\n    \n- `alertThreshold`: The value that the subscription needs to reach to trigger the alert rule.\n    \n- `actions`: A list of actions that take place when the threshold is met. Set as an empty list if no actions are to take place.\n    \n\nJSONCopied\n\n```\ntriggers: [\n    {\n        \"label\": \"critical\",\n        \"alertThreshold\": 100,\n        \"actions\": [\n            {\n                \"type\": \"email\",\n                \"targetType\": \"user\",\n                \"targetIdentifier\": \"23489853\",\n                \"inputChannelId\": None\n                \"integrationId\": None,\n                \"sentryAppId\": None\n            }\n        ]\n    },\n    {\n        \"label\": \"warning\",\n        \"alertThreshold\": 75,\n        \"actions\": []\n    }\n]\n\n ```\n\nMetric alert rule trigger actions follow the following structure:\n\n- `type`: The type of trigger action. Valid values are `email`, `slack`, `msteams`, `pagerduty`, `sentry_app`, `sentry_notification`, and `opsgenie`.\n    \n- `targetType`: The type of target the notification will be sent to. Valid values are `specific`, `user`, `team`, and `sentry_app`.\n    \n- `targetIdentifier`: The ID of the target. This must be an integer for PagerDuty and Sentry apps, and a string for all others. Examples of appropriate values include a Slack channel name (`#my-channel`), a user ID, a team ID, a Sentry app ID, etc.\n    \n- `inputChannelId`: The ID of the Slack channel. This is only used for the Slack action, and can be used as an alternative to providing the `targetIdentifier`.\n    \n- `integrationId`: The integration ID. This is required for every action type except `email` and `sentry_app.`\n    \n- `sentryAppId`: The ID of the Sentry app. This is required when `type` is `sentry_app`.\n    \n\n`environment` _(string)_\n\nThe name of the environment to filter by. Defaults to all environments.\n\n`dataset` _(string)_\n\nThe name of the dataset that this query will be executed on. Valid values are `events`, `transactions`, `metrics`, `sessions`, and `generic-metrics`. Defaults to `events`. See **Metric Alert Rule Types** under [Create a Metric Alert Rule](https://docs.sentry.io/api/alerts/create-a-metric-alert-rule-for-an-organization/#metric-alert-rule-types) for valid configurations.\n\n`queryType` _(integer)_\n\nThe type of query. If no value is provided, `queryType` is set to the default for the specified `dataset.` See **Metric Alert Rule Types** under [Create a Metric Alert Rule](https://docs.sentry.io/api/alerts/create-a-metric-alert-rule-for-an-organization/#metric-alert-rule-types) for valid configurations.\n\n- `0` - event.type:error\n    \n- `1` - event.type:transaction\n    \n- `2` - None\n    \n\n`eventTypes` _(array(string))_\n\nList of event types that this alert will be related to. Valid values are `default` (events captured using [Capture Message](https://docs.sentry.io/product/sentry-basics/integrate-backend/capturing-errors/#capture-message)), `error` and `transaction`.\n\n`comparisonDelta` _(integer)_\n\nAn optional int representing the time delta to use as the comparison period, in minutes. Required when using a percentage change threshold (\"x%\" higher or lower compared to `comparisonDelta` minutes ago). A percentage change threshold cannot be used for [Crash Free Session Rate](https://docs.sentry.io/api/alerts/create-a-metric-alert-rule-for-an-organization/#crash-free-session-rate) or [Crash Free User Rate](https://docs.sentry.io/api/alerts/create-a-metric-alert-rule-for-an-organization/#crash-free-user-rate).\n\n`resolveThreshold` _(number)_\n\nOptional value that the metric needs to reach to resolve the alert. If no value is provided, this is set automatically based on the lowest severity trigger's `alertThreshold`. For example, if the alert is set to trigger at the warning level when the number of errors is above 50, then the alert would be set to resolve when there are less than 50 errors. If `thresholdType` is `0`, `resolveThreshold` must be greater than the critical threshold. Otherwise, it must be less than the critical threshold.\n\n`owner` _(string)_\n\nThe ID of the team or user that owns the rule.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `alert_rule:write`\n    \n- `alerts:write`\n    \n- `org:admin`\n    \n- `org:write`",
  "sortOrder": 12
}
